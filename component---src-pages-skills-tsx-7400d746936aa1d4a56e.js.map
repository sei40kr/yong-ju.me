{"version":3,"file":"component---src-pages-skills-tsx-7400d746936aa1d4a56e.js","mappings":"srHAwEA,EAhBc,SAACA,GAAD,OACZ,gBAAC,IAAD,CACEC,QAAQ,UACRC,UAAS,qBAAuBF,EAAMG,SAA7B,6BAET,8BACE,sBAAID,UAAU,2BAA2BF,EAAMI,OAlD7BD,EAmDFH,EAAMG,SAlD1B,uBAAKD,UAAS,qCAAuCC,EAAvC,cACXA,KAmDD,4BA9CF,GADuBE,EAgDFL,EAAMK,WA/CbC,OACZ,2BAASJ,UAAU,QACjB,sBAAIA,UAAU,yDAAd,aAGA,0BACGG,EAAUE,KAAI,SAACC,EAASC,GAAV,OACb,sBACEC,IAAKD,EACLP,UAAU,4GAETM,QAKP,KAGJ,GADyBG,EA8BFX,EAAMW,aA7BbL,OACd,2BAASJ,UAAU,QACjB,sBAAIA,UAAU,yDAAd,eAGA,0BACGS,EAAYJ,KAAI,SAACK,EAAYH,GAAb,OACf,sBACEC,IAAKD,EACLP,UAAU,4GAETU,QAKP,OAjBoB,IAACD,EAnBFN,EANDF,GCqDxB,EAdmB,SAACH,GAAD,OACjB,gBAAC,IAAD,CAAQa,SAAUb,EAAMc,KAAKC,KAAKC,aAAaH,UAC7C,uBAAKX,UAAU,eACb,gBAAC,IAAD,KACE,gBAAC,IAAD,CAASe,GAAG,aAAZ,YACA,gBAAC,IAAD,CAASA,GAAG,UAAUC,QAAM,GAA5B,WAIF,gBAAC,IAAD,KAvBe,SAACC,GAAD,OACnB,uBAAKjB,UAAU,+BACZiB,EAAOZ,KAAI,SAACa,EAAOX,GAAR,OACV,gBAAC,EAAD,CACEC,IAAKD,EACLL,KAAMgB,EAAMhB,KACZD,SAAUiB,EAAMjB,SAChBE,UAAWe,EAAMf,UAAUE,KAAI,SAACC,GAAD,OAAaA,EAAQa,WACpDV,YAAaS,EAAMT,YAAYJ,KAAI,SAACK,GAAD,OAAgBA,EAAWS,iBAepDC,CAAaH","sources":["webpack://yong-ju.me/./src/components/skill.tsx","webpack://yong-ju.me/./src/pages/skills.tsx"],"sourcesContent":["import React from \"react\";\nimport Card from \"../components/card\";\n\ntype Progress = \"beginner\" | \"intermediate\" | \"advanced\";\n\nexport interface SkillProps {\n  name: string;\n  progress: Progress;\n  abilities: string[];\n  experiences: string[];\n}\n\nconst renderProgress = (progress: Progress) => (\n  <div className={`mb-4 font-montserrat text-sm text-${progress} uppercase`}>\n    {progress}\n  </div>\n);\n\nconst renderAbilities = (abilities: string[]) =>\n  0 < abilities.length ? (\n    <section className=\"mb-4\">\n      <h4 className=\"mb-1 font-montserrat text-sm uppercase text-slate-500\">\n        Abilities\n      </h4>\n      <ul>\n        {abilities.map((ability, i) => (\n          <li\n            key={i}\n            className=\"before:-ml-8 before:inline-block before:w-8 before:text-right before:text-slate-500 before:content-['・']\"\n          >\n            {ability}\n          </li>\n        ))}\n      </ul>\n    </section>\n  ) : null;\n\nconst renderExperiences = (experiences: string[]) =>\n  0 < experiences.length ? (\n    <section className=\"mb-4\">\n      <h4 className=\"mb-1 font-montserrat text-sm uppercase text-slate-500\">\n        Experiences\n      </h4>\n      <ul>\n        {experiences.map((experience, i) => (\n          <li\n            key={i}\n            className=\"before:-ml-8 before:inline-block before:w-8 before:text-right before:text-slate-500 before:content-['・']\"\n          >\n            {experience}\n          </li>\n        ))}\n      </ul>\n    </section>\n  ) : null;\n\nconst Skill = (props: SkillProps) => (\n  <Card\n    tagName=\"article\"\n    className={`border-t-3 border-${props.progress} px-8 pb-1 pt-4 md:w-full`}\n  >\n    <header>\n      <h3 className=\"mb-1 text-2xl font-bold\">{props.name}</h3>\n      {renderProgress(props.progress)}\n    </header>\n    <main>\n      {renderAbilities(props.abilities)}\n      {renderExperiences(props.experiences)}\n    </main>\n  </Card>\n);\n\nexport default Skill;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport skills from \"../../content/skills.yaml\";\nimport Container from \"../components/container\";\nimport Layout from \"../components/layout\";\nimport { Nav, NavItem } from \"../components/nav\";\nimport Skill from \"../components/skill\";\n\ninterface SkillModel {\n  name: string;\n  progress: \"beginner\" | \"intermediate\" | \"advanced\";\n  abilities: Array<{ content: string }>;\n  experiences: Array<{ content: string }>;\n}\n\ninterface SkillsPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        siteName: string;\n      };\n    };\n  };\n}\n\n// Please note that you can use https://github.com/dotansimha/graphql-code-generator\n// to generate all types from graphQL schema\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteName\n      }\n    }\n  }\n`;\n\nconst renderSkills = (skills: SkillModel[]) => (\n  <div className=\"grid grid-cols-2 gap-8 py-8\">\n    {skills.map((skill, i) => (\n      <Skill\n        key={i}\n        name={skill.name}\n        progress={skill.progress}\n        abilities={skill.abilities.map((ability) => ability.content)}\n        experiences={skill.experiences.map((experience) => experience.content)}\n      />\n    ))}\n  </div>\n);\n\nconst SkillsPage = (props: SkillsPageProps) => (\n  <Layout siteName={props.data.site.siteMetadata.siteName}>\n    <div className=\"bg-gray-100\">\n      <Nav>\n        <NavItem to=\"/projects\">Projects</NavItem>\n        <NavItem to=\"/skills\" active>\n          Skills\n        </NavItem>\n      </Nav>\n      <Container>{renderSkills(skills)}</Container>\n    </div>\n  </Layout>\n);\n\nexport default SkillsPage;\n"],"names":["props","tagName","className","progress","name","abilities","length","map","ability","i","key","experiences","experience","siteName","data","site","siteMetadata","to","active","skills","skill","content","renderSkills"],"sourceRoot":""}